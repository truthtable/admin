import{d as re}from"./@babel-ea433da3.js";import{r as se}from"./react-372c844c.js";var J={exports:{}};(function(K,ie){(function($,j){K.exports=j(se)})(typeof self<"u"?self:re,function($){return function(){var j={155:function(e){e.exports=$}},B={};function E(e){var t=B[e];if(t!==void 0)return t.exports;var r=B[e]={exports:{}};return j[e](r,r.exports,E),r.exports}E.d=function(e,t){for(var r in t)E.o(t,r)&&!E.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},E.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},E.r=function(e){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var H={};E.r(H),E.d(H,{useReactToPrint:function(){return ee}});var Q=E(155);function c({level:e="error",messages:t,suppressErrors:r=!1}){r||(e==="error"?console.error(t):e==="warning"?console.warn(t):console.debug(t))}function M(e,t){if(t||!e){const r=document.getElementById("printWindow");r&&document.body.removeChild(r)}}function W(e){return e instanceof Error?e:new Error("Unknown Error")}function G(e,t){const{documentTitle:r,onAfterPrint:l,onPrintError:g,preserveAfterPrint:d,print:v,suppressErrors:u}=t;setTimeout(()=>{var p,b;if(e.contentWindow)if(e.contentWindow.focus(),v)v(e).then(()=>{l?.(),M(d)}).catch(w=>{g?g("print",W(w)):c({messages:["An error was thrown by the specified `print` function"],suppressErrors:u})});else{if(e.contentWindow.print){const w=(b=(p=e.contentDocument)===null||p===void 0?void 0:p.title)!==null&&b!==void 0?b:"",A=e.ownerDocument.title;r&&(e.ownerDocument.title=r,e.contentDocument&&(e.contentDocument.title=r)),e.contentWindow.print(),r&&(e.ownerDocument.title=A,e.contentDocument&&(e.contentDocument.title=w))}else c({messages:["Printing for this browser is not currently possible: the browser does not have a `print` method available for iframes."],suppressErrors:u});window.addEventListener("focus",()=>{l?.(),M(d)},{once:!0})}else c({messages:["Printing failed because the `contentWindow` of the print iframe did not load. This is possibly an error with `react-to-print`. Please file an issue: https://github.com/MatthewHerbst/react-to-print/issues/"],suppressErrors:u})},500)}function V(e){const t=[],r=document.createTreeWalker(e,NodeFilter.SHOW_ELEMENT,null);let l=r.nextNode();for(;l;)t.push(l),l=r.nextNode();return t}function Y(e,t,r){const l=V(e),g=V(t);if(l.length===g.length)for(let d=0;d<l.length;d++){const v=l[d],u=g[d],p=v.shadowRoot;if(p!==null){const b=u.attachShadow({mode:p.mode});b.innerHTML=p.innerHTML,Y(p,b,r)}}else c({messages:["When cloning shadow root content, source and target elements have different size. `onBeforePrint` likely resolved too early.",e,t],suppressErrors:r})}const X=`
    @page {
        /* Remove browser default header (title) and footer (url) */
        margin: 0;
    }
    @media print {
        body {
            /* Tell browsers to print background colors */
            color-adjust: exact; /* Firefox. This is an older version of "print-color-adjust" */
            print-color-adjust: exact; /* Firefox/Safari */
            -webkit-print-color-adjust: exact; /* Chrome/Safari/Edge/Opera */
        }
    }
`;function Z(e,t,r,l){var g,d,v,u,p;const{contentNode:b,clonedContentNode:w,clonedImgNodes:A,clonedVideoNodes:D,numResourcesToLoad:F,originalCanvasNodes:C}=r,{bodyClass:L,fonts:S,ignoreGlobalStyles:P,pageStyle:R,nonce:y,suppressErrors:N,copyShadowRoots:O}=l;e.onload=null;const n=(g=e.contentDocument)!==null&&g!==void 0?g:(d=e.contentWindow)===null||d===void 0?void 0:d.document;if(n){const T=n.body.appendChild(w);O&&Y(b,T,!!N),S&&(!((v=e.contentDocument)===null||v===void 0)&&v.fonts&&(!((u=e.contentWindow)===null||u===void 0)&&u.FontFace)?S.forEach(s=>{const o=new FontFace(s.family,s.source,{weight:s.weight,style:s.style});e.contentDocument.fonts.add(o),o.loaded.then(()=>{t(o)}).catch(h=>{t(o,["Failed loading the font:",o,"Load error:",W(h)])})}):(S.forEach(s=>{t(s)}),c({messages:['"react-to-print" is not able to load custom fonts because the browser does not support the FontFace API but will continue attempting to print the page'],suppressErrors:N})));const q=R??X,I=n.createElement("style");y&&(I.setAttribute("nonce",y),n.head.setAttribute("nonce",y)),I.appendChild(n.createTextNode(q)),n.head.appendChild(I),L&&n.body.classList.add(...L.split(" "));const te=n.querySelectorAll("canvas");for(let s=0;s<C.length;++s){const o=C[s],h=te[s];if(h===void 0){c({messages:["A canvas element could not be copied for printing, has it loaded? `onBeforePrint` likely resolved too early.",o],suppressErrors:N});continue}const i=h.getContext("2d");i&&i.drawImage(o,0,0)}for(let s=0;s<A.length;s++){const o=A[s],h=o.getAttribute("src");if(h){const i=new Image;i.onload=()=>{t(o)},i.onerror=(a,m,k,f,x)=>{t(o,["Error loading <img>",o,"Error",x])},i.src=h}else t(o,['Found an <img> tag with an empty "src" attribute. This prevents pre-loading it.',o])}for(let s=0;s<D.length;s++){const o=D[s];o.preload="auto";const h=o.getAttribute("poster");if(h){const i=new Image;i.onload=()=>{t(o)},i.onerror=(a,m,k,f,x)=>{t(o,["Error loading video poster",h,"for video",o,"Error:",x])},i.src=h}else o.readyState>=2?t(o):o.src?(o.onloadeddata=()=>{t(o)},o.onerror=(i,a,m,k,f)=>{t(o,["Error loading video",o,"Error",f])},o.onstalled=()=>{t(o,["Loading video stalled, skipping",o])}):t(o,["Error loading video, `src` is empty",o])}const z="select",U=b.querySelectorAll(z),oe=n.querySelectorAll(z);for(let s=0;s<U.length;s++)oe[s].value=U[s].value;if(!P){const s=document.querySelectorAll("style, link[rel~='stylesheet'], link[as='style']");for(let o=0,h=s.length;o<h;++o){const i=s[o];if(i.tagName.toLowerCase()==="style"){const a=n.createElement(i.tagName),m=i.sheet;if(m){let k="";try{const f=m.cssRules.length;for(let x=0;x<f;++x)typeof m.cssRules[x].cssText=="string"&&(k+=`${m.cssRules[x].cssText}\r
`)}catch(f){c({messages:["A stylesheet could not be accessed. This is likely due to the stylesheet having cross-origin imports, and many browsers block script access to cross-origin stylesheets. See https://github.com/MatthewHerbst/react-to-print/issues/429 for details. You may be able to load the sheet by both marking the stylesheet with the cross `crossorigin` attribute, and setting the `Access-Control-Allow-Origin` header on the server serving the stylesheet. Alternatively, host the stylesheet on your domain to avoid this issue entirely.",i,`Original error: ${W(f).message}`],level:"warning"})}a.setAttribute("id",`react-to-print-${o}`),y&&a.setAttribute("nonce",y),a.appendChild(n.createTextNode(k)),n.head.appendChild(a)}}else if(i.getAttribute("href"))if(i.hasAttribute("disabled"))c({messages:["`react-to-print` encountered a <link> tag with a `disabled` attribute and will ignore it. Note that the `disabled` attribute is deprecated, and some browsers ignore it. You should stop using it. https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-disabled. The <link> is:",i],level:"warning"}),t(i);else{const a=n.createElement(i.tagName);for(let m=0,k=i.attributes.length;m<k;++m){const f=i.attributes[m];f&&a.setAttribute(f.nodeName,(p=f.nodeValue)!==null&&p!==void 0?p:"")}a.onload=()=>{t(a)},a.onerror=(m,k,f,x,ne)=>{t(a,["Failed to load",a,"Error:",ne])},y&&a.setAttribute("nonce",y),n.head.appendChild(a)}else c({messages:["`react-to-print` encountered a <link> tag with an empty `href` attribute. In addition to being invalid HTML, this can cause problems in many browsers, and so the <link> was not loaded. The <link> is:",i],level:"warning"}),t(i)}}}F===0&&G(e,l)}function _(e,t,r,l){e.onload=()=>{Z(e,t,r,l)},document.body.appendChild(e)}function ee(e){const{contentRef:t,fonts:r,ignoreGlobalStyles:l,onBeforePrint:g,onPrintError:d,preserveAfterPrint:v,suppressErrors:u}=e;return(0,Q.useCallback)(b=>{M(v,!0);const w=function({contentRef:n,optionalContent:T,suppressErrors:q}){return T&&(n&&c({level:"warning",messages:['"react-to-print" received a `contentRef` option and a optional-content param passed to its callback. The `contentRef` option will be ignored.']}),typeof T=="function")?T():n?n.current:void c({messages:['"react-to-print" did not receive a `contentRef` option or a optional-content param pass to its callback.'],suppressErrors:q})}({contentRef:t,optionalContent:b,suppressErrors:u});if(!w)return void c({messages:["There is nothing to print"],suppressErrors:u});const A=w.cloneNode(!0),D=document.querySelectorAll("link[rel~='stylesheet'], link[as='style']"),F=A.querySelectorAll("img"),C=A.querySelectorAll("video"),L=r?r.length:0,S=(l?0:D.length)+F.length+C.length+L,P=[],R=[],y=function(){const n=document.createElement("iframe");return n.width=`${document.documentElement.clientWidth}px`,n.height=`${document.documentElement.clientHeight}px`,n.style.position="absolute",n.style.top=`-${document.documentElement.clientHeight+100}px`,n.style.left=`-${document.documentElement.clientWidth+100}px`,n.id="printWindow",n.srcdoc="<!DOCTYPE html>",n}(),N=(n,T)=>{P.includes(n)?c({level:"debug",messages:["Tried to mark a resource that has already been handled",n],suppressErrors:u}):(T?(c({messages:['"react-to-print" was unable to load a resource but will continue attempting to print the page',...T],suppressErrors:u}),R.push(n)):P.push(n),P.length+R.length===S&&G(y,e))},O={contentNode:w,clonedContentNode:A,clonedImgNodes:F,clonedVideoNodes:C,numResourcesToLoad:S,originalCanvasNodes:w.querySelectorAll("canvas")};g?g().then(()=>{_(y,N,O,e)}).catch(n=>{d?.("onBeforePrint",W(n))}):_(y,N,O,e)},[e])}return H}()})})(J);var ce=J.exports;export{ce as l};
